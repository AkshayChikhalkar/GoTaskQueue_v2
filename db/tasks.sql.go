// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: tasks.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createTask = `-- name: CreateTask :one
INSERT INTO tasks (type, value, state, creation_time, last_update_time)
VALUES ($1, $2, 'received', NOW(), NOW())
RETURNING id
`

type CreateTaskParams struct {
	Type  int32
	Value int32
}

func (q *Queries) CreateTask(ctx context.Context, arg CreateTaskParams) (int32, error) {
	row := q.db.QueryRow(ctx, createTask, arg.Type, arg.Value)
	var id int32
	err := row.Scan(&id)
	return id, err
}

const updateTaskState = `-- name: UpdateTaskState :exec
UPDATE tasks
SET state = $2, last_update_time = NOW()
WHERE id = $1
`

type UpdateTaskStateParams struct {
	ID    int32
	State pgtype.Text
}

func (q *Queries) UpdateTaskState(ctx context.Context, arg UpdateTaskStateParams) error {
	_, err := q.db.Exec(ctx, updateTaskState, arg.ID, arg.State)
	return err
}
